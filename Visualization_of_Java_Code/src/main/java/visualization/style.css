#graphScrollContainer{ /* #<ID> := document.getElementById(<ID>) -- style for this element*/
    width: 75vw; /* := 100% of max screen width */
    height: calc(100vh - 1vw);
    overflow-y: scroll;
    overflow-x: scroll;
    min-width: 75vw;
    max-width: 75vw;
    /* min-height: calc(100vh - 1vw);
    max-height: calc(100vh - 1vw); */
    float:left;
    scrollbar-width: 1vw;
}
#graphContainer{
    overflow-x: visible;/*mxgraph overwrites css of graphcontainer -> this fixes view*/
    overflow-y: visible;
}
#optionsContainer{
    width: 23vw;
    height: calc(100vh - 1vw);
    overflow-y: scroll;
    scrollbar-width: 1vw;
    overflow-x: hidden;
    /* min-width: 25vw;
    max-width: 25vw; */
    min-height: calc(100vh - 1vw);
    max-height: calc(100vh - 1vw);
    float:right;
}
#optionsContainer{
    font-size: 0.7rem;
}
#optionsContainer > div{/*all direct children of optionscontainer that are of type div*/
    margin: 0.75vh 0
}
@media(min-width: 768px){ /*like an if that checks the current window width in pixel -> "body" of "if" is executed when window size bigger than 768 pixels*/
    #optionsContainer{
        font-size: 0.95rem;
    }
}
@media(min-width: 992px){
    #optionsContainer{
        font-size: 1.095rem;
    }
}
body{
    height: 100vh;
    width: 100vw;
    overflow-y: hidden;
    overflow-x: hidden;
}

#zoomInput{
    width: 5vw;
}

.positionCenter{/*centers content of applied on container on x and y axis*/
    display: flex;
    align-items: center;
    justify-content: center;
}
.positionCenterY{/*centers content of applied on container only on y axis*/
    display: flex;
    align-items: center;
}
text{
    font-size: 1rem;
}